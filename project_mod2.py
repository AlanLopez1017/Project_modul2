# -*- coding: utf-8 -*-
"""Project-mod2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jp45zjQ6N-SxYF8b2HvjZzZZ5DpVkVn6
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np 
import pandas as pd 
from datetime import datetime


import matplotlib.pyplot as plt
# %matplotlib inline
import seaborn as sns
sns.set()
from plotly.offline import init_notebook_mode, iplot 
import plotly.graph_objs as go
import plotly.offline as py
!pip install pycountry
import folium 
from folium import plugins


import numpy as np
from PIL import Image


import matplotlib.ticker as ticker
import matplotlib.animation as animation
from IPython.display import HTML

# Graphics in retina format 
# %config InlineBackend.figure_format = 'retina' 

# Increase the default plot size and set the color scheme
plt.rcParams['figure.figsize'] = 8, 5


# Disable warnings in Anaconda
import warnings
warnings.filterwarnings('ignore')
import os

df = pd.read_csv('https://raw.githubusercontent.com/devfmx/master-data-ai/main/9.%20Proyecto/Forbes%20Richest%20Atheletes%20(Forbes%20Richest%20Athletes%201990-2020).csv')

# Creating a copy of the original dataframe- df
df1 = df.copy()
df1.drop('S.NO',axis=1,inplace=True)
df1.info()

# Convert string to datetime64
df1['Year'] = df1['Year'].apply(pd.to_datetime,format='%Y')

#Set Date column as the index column.
df1['year'] = pd.DatetimeIndex(df1['Year']).year  
df1.set_index('year', inplace=True)
df1.drop('Year',axis=1,inplace=True)

# Converting the sport column to uppercase
df1['Sport'] = df1['Sport'].str.upper()
df1.head()

"""## 5 ¿Cuántos atletas por deporte tiene cada país?"""

atletas_por_deporte_y_pais = {}
paises = list(set(df1['Nationality'])) # lista de paise

for p in paises:
  pais = df1[df1['Nationality']==p]
  atletas_por_deporte = dict(pais['Sport'].value_counts().to_frame()) # obtiene el númeroo de atletas por deporte
  atletas_por_deporte_y_pais[str(list(pais["Nationality"].head(1)))] = dict(atletas_por_deporte['Sport']) # genera un diccionario -> key: pais, value: diccionario con atletas por deporte

atletas_por_deporte_y_pais

"""## 6 Ganancia mínima y máxima (dentro del dataset) por deporte y por país."""

def ganancias(df, case):
  print("Ganancias por " + case + "\n")
  earn = {}
  args = list(set(df[case]))
  for a in args:
    arg = df[df[case]==a]
    earn[str(list(arg[case].head(1)))] = {'max':max(arg["earnings ($ million)"]),
                                          'min':min(arg["earnings ($ million)"])}
  return earn

earn_sport = ganancias(df1, "Sport")
earn_sport
#earn_country = ganancias(df1, "Country")
#earn_country